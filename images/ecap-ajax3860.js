/* ******************************************************************************
   DO NOT EDIT THIS FILE!.
   Instead, make changes to /assets/js/ecap-ajax-es6.js and then run 'gulp build'
   in the console so that this file and its minified version will be recreated.
****************************************************************************** */
/** MINIFIED SHA256 HASH Function for JS
* [js-sha256]{@link https://github.com/emn178/js-sha256}
*
* @version 0.9.0
* @author Chen, Yi-Cyuan [emn178@gmail.com]
* @copyright Chen, Yi-Cyuan 2014-2017
* @license MIT
*/
/* jshint ignore:start */
/* istanbul ignore next */
!function(){"use strict";function t(t,i){i?(d[0]=d[16]=d[1]=d[2]=d[3]=d[4]=d[5]=d[6]=d[7]=d[8]=d[9]=d[10]=d[11]=d[12]=d[13]=d[14]=d[15]=0,this.blocks=d):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=t}function i(i,r,s){var e,n=typeof i;if("string"===n){var o,a=[],u=i.length,c=0;for(e=0;e<u;++e)(o=i.charCodeAt(e))<128?a[c++]=o:o<2048?(a[c++]=192|o>>6,a[c++]=128|63&o):o<55296||o>=57344?(a[c++]=224|o>>12,a[c++]=128|o>>6&63,a[c++]=128|63&o):(o=65536+((1023&o)<<10|1023&i.charCodeAt(++e)),a[c++]=240|o>>18,a[c++]=128|o>>12&63,a[c++]=128|o>>6&63,a[c++]=128|63&o);i=a}else{if("object"!==n)throw new Error(h);if(null===i)throw new Error(h);if(f&&i.constructor===ArrayBuffer)i=new Uint8Array(i);else if(!(Array.isArray(i)||f&&ArrayBuffer.isView(i)))throw new Error(h)}i.length>64&&(i=new t(r,!0).update(i).array());var y=[],p=[];for(e=0;e<64;++e){var l=i[e]||0;y[e]=92^l,p[e]=54^l}t.call(this,r,s),this.update(p),this.oKeyPad=y,this.inner=!0,this.sharedMemory=s}var h="input is invalid type",r="object"==typeof window,s=r?window:{};s.JS_SHA256_NO_WINDOW&&(r=!1);var e=!r&&"object"==typeof self,n=!s.JS_SHA256_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node;n?s=global:e&&(s=self);var o=!s.JS_SHA256_NO_COMMON_JS&&"object"==typeof module&&module.exports,a="function"==typeof define&&define.amd,f=!s.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,u="0123456789abcdef".split(""),c=[-2147483648,8388608,32768,128],y=[24,16,8,0],p=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],l=["hex","array","digest","arrayBuffer"],d=[];!s.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),!f||!s.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return"object"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});var A=function(i,h){return function(r){return new t(h,!0).update(r)[i]()}},w=function(i){var h=A("hex",i);n&&(h=b(h,i)),h.create=function(){return new t(i)},h.update=function(t){return h.create().update(t)};for(var r=0;r<l.length;++r){var s=l[r];h[s]=A(s,i)}return h},b=function(t,i){var r=eval("require('crypto')"),s=eval("require('buffer').Buffer"),e=i?"sha224":"sha256",n=function(i){if("string"==typeof i)return r.createHash(e).update(i,"utf8").digest("hex");if(null===i||void 0===i)throw new Error(h);return i.constructor===ArrayBuffer&&(i=new Uint8Array(i)),Array.isArray(i)||ArrayBuffer.isView(i)||i.constructor===s?r.createHash(e).update(new s(i)).digest("hex"):t(i)};return n},v=function(t,h){return function(r,s){return new i(r,h,!0).update(s)[t]()}},_=function(t){var h=v("hex",t);h.create=function(h){return new i(h,t)},h.update=function(t,i){return h.create(t).update(i)};for(var r=0;r<l.length;++r){var s=l[r];h[s]=v(s,t)}return h};t.prototype.update=function(t){if(!this.finalized){var i,r=typeof t;if("string"!==r){if("object"!==r)throw new Error(h);if(null===t)throw new Error(h);if(f&&t.constructor===ArrayBuffer)t=new Uint8Array(t);else if(!(Array.isArray(t)||f&&ArrayBuffer.isView(t)))throw new Error(h);i=!0}for(var s,e,n=0,o=t.length,a=this.blocks;n<o;){if(this.hashed&&(this.hashed=!1,a[0]=this.block,a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),i)for(e=this.start;n<o&&e<64;++n)a[e>>2]|=t[n]<<y[3&e++];else for(e=this.start;n<o&&e<64;++n)(s=t.charCodeAt(n))<128?a[e>>2]|=s<<y[3&e++]:s<2048?(a[e>>2]|=(192|s>>6)<<y[3&e++],a[e>>2]|=(128|63&s)<<y[3&e++]):s<55296||s>=57344?(a[e>>2]|=(224|s>>12)<<y[3&e++],a[e>>2]|=(128|s>>6&63)<<y[3&e++],a[e>>2]|=(128|63&s)<<y[3&e++]):(s=65536+((1023&s)<<10|1023&t.charCodeAt(++n)),a[e>>2]|=(240|s>>18)<<y[3&e++],a[e>>2]|=(128|s>>12&63)<<y[3&e++],a[e>>2]|=(128|s>>6&63)<<y[3&e++],a[e>>2]|=(128|63&s)<<y[3&e++]);this.lastByteIndex=e,this.bytes+=e-this.start,e>=64?(this.block=a[16],this.start=e-64,this.hash(),this.hashed=!0):this.start=e}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},t.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,i=this.lastByteIndex;t[16]=this.block,t[i>>2]|=c[3&i],this.block=t[16],i>=56&&(this.hashed||this.hash(),t[0]=this.block,t[16]=t[1]=t[2]=t[3]=t[4]=t[5]=t[6]=t[7]=t[8]=t[9]=t[10]=t[11]=t[12]=t[13]=t[14]=t[15]=0),t[14]=this.hBytes<<3|this.bytes>>>29,t[15]=this.bytes<<3,this.hash()}},t.prototype.hash=function(){var t,i,h,r,s,e,n,o,a,f=this.h0,u=this.h1,c=this.h2,y=this.h3,l=this.h4,d=this.h5,A=this.h6,w=this.h7,b=this.blocks;for(t=16;t<64;++t)i=((s=b[t-15])>>>7|s<<25)^(s>>>18|s<<14)^s>>>3,h=((s=b[t-2])>>>17|s<<15)^(s>>>19|s<<13)^s>>>10,b[t]=b[t-16]+i+b[t-7]+h<<0;for(a=u&c,t=0;t<64;t+=4)this.first?(this.is224?(e=300032,w=(s=b[0]-1413257819)-150054599<<0,y=s+24177077<<0):(e=704751109,w=(s=b[0]-210244248)-1521486534<<0,y=s+143694565<<0),this.first=!1):(i=(f>>>2|f<<30)^(f>>>13|f<<19)^(f>>>22|f<<10),r=(e=f&u)^f&c^a,w=y+(s=w+(h=(l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7))+(l&d^~l&A)+p[t]+b[t])<<0,y=s+(i+r)<<0),i=(y>>>2|y<<30)^(y>>>13|y<<19)^(y>>>22|y<<10),r=(n=y&f)^y&u^e,A=c+(s=A+(h=(w>>>6|w<<26)^(w>>>11|w<<21)^(w>>>25|w<<7))+(w&l^~w&d)+p[t+1]+b[t+1])<<0,i=((c=s+(i+r)<<0)>>>2|c<<30)^(c>>>13|c<<19)^(c>>>22|c<<10),r=(o=c&y)^c&f^n,d=u+(s=d+(h=(A>>>6|A<<26)^(A>>>11|A<<21)^(A>>>25|A<<7))+(A&w^~A&l)+p[t+2]+b[t+2])<<0,i=((u=s+(i+r)<<0)>>>2|u<<30)^(u>>>13|u<<19)^(u>>>22|u<<10),r=(a=u&c)^u&y^o,l=f+(s=l+(h=(d>>>6|d<<26)^(d>>>11|d<<21)^(d>>>25|d<<7))+(d&A^~d&w)+p[t+3]+b[t+3])<<0,f=s+(i+r)<<0;this.h0=this.h0+f<<0,this.h1=this.h1+u<<0,this.h2=this.h2+c<<0,this.h3=this.h3+y<<0,this.h4=this.h4+l<<0,this.h5=this.h5+d<<0,this.h6=this.h6+A<<0,this.h7=this.h7+w<<0},t.prototype.hex=function(){this.finalize();var t=this.h0,i=this.h1,h=this.h2,r=this.h3,s=this.h4,e=this.h5,n=this.h6,o=this.h7,a=u[t>>28&15]+u[t>>24&15]+u[t>>20&15]+u[t>>16&15]+u[t>>12&15]+u[t>>8&15]+u[t>>4&15]+u[15&t]+u[i>>28&15]+u[i>>24&15]+u[i>>20&15]+u[i>>16&15]+u[i>>12&15]+u[i>>8&15]+u[i>>4&15]+u[15&i]+u[h>>28&15]+u[h>>24&15]+u[h>>20&15]+u[h>>16&15]+u[h>>12&15]+u[h>>8&15]+u[h>>4&15]+u[15&h]+u[r>>28&15]+u[r>>24&15]+u[r>>20&15]+u[r>>16&15]+u[r>>12&15]+u[r>>8&15]+u[r>>4&15]+u[15&r]+u[s>>28&15]+u[s>>24&15]+u[s>>20&15]+u[s>>16&15]+u[s>>12&15]+u[s>>8&15]+u[s>>4&15]+u[15&s]+u[e>>28&15]+u[e>>24&15]+u[e>>20&15]+u[e>>16&15]+u[e>>12&15]+u[e>>8&15]+u[e>>4&15]+u[15&e]+u[n>>28&15]+u[n>>24&15]+u[n>>20&15]+u[n>>16&15]+u[n>>12&15]+u[n>>8&15]+u[n>>4&15]+u[15&n];return this.is224||(a+=u[o>>28&15]+u[o>>24&15]+u[o>>20&15]+u[o>>16&15]+u[o>>12&15]+u[o>>8&15]+u[o>>4&15]+u[15&o]),a},t.prototype.toString=t.prototype.hex,t.prototype.digest=function(){this.finalize();var t=this.h0,i=this.h1,h=this.h2,r=this.h3,s=this.h4,e=this.h5,n=this.h6,o=this.h7,a=[t>>24&255,t>>16&255,t>>8&255,255&t,i>>24&255,i>>16&255,i>>8&255,255&i,h>>24&255,h>>16&255,h>>8&255,255&h,r>>24&255,r>>16&255,r>>8&255,255&r,s>>24&255,s>>16&255,s>>8&255,255&s,e>>24&255,e>>16&255,e>>8&255,255&e,n>>24&255,n>>16&255,n>>8&255,255&n];return this.is224||a.push(o>>24&255,o>>16&255,o>>8&255,255&o),a},t.prototype.array=t.prototype.digest,t.prototype.arrayBuffer=function(){this.finalize();var t=new ArrayBuffer(this.is224?28:32),i=new DataView(t);return i.setUint32(0,this.h0),i.setUint32(4,this.h1),i.setUint32(8,this.h2),i.setUint32(12,this.h3),i.setUint32(16,this.h4),i.setUint32(20,this.h5),i.setUint32(24,this.h6),this.is224||i.setUint32(28,this.h7),t},i.prototype=new t,i.prototype.finalize=function(){if(t.prototype.finalize.call(this),this.inner){this.inner=!1;var i=this.array();t.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(i),t.prototype.finalize.call(this)}};var B=w();B.sha256=B,B.sha224=w(!0),B.sha256.hmac=_(),B.sha224.hmac=_(!0),o?module.exports=B:(s.sha256=B.sha256,s.sha224=B.sha224,a&&define(function(){return B}))}();
/* jshint ignore:end */
/* ******************************************************************************
End sha256.min.js
****************************************************************************** */
/*!
  * Reqwest! A general purpose XHR connection manager. Works on browsers back to IE6.
  * license MIT (c) Dustin Diaz 2015
  * https://github.com/ded/reqwest
  */
/* istanbul ignore next */
!function(e,t,n){typeof module!="undefined"&&module.exports?module.exports=n():typeof define=="function"&&define.amd?define(n):t[e]=n()}("reqwest",this,function(){function succeed(e){var t=protocolRe.exec(e.url);return t=t&&t[1]||context.location.protocol,httpsRe.test(t)?twoHundo.test(e.request.status):!!e.request.response}function handleReadyState(e,t,n){return function(){if(e._aborted)return n(e.request);if(e._timedOut)return n(e.request,"Request is aborted: timeout");e.request&&e.request[readyState]==4&&(e.request.onreadystatechange=noop,succeed(e)?t(e.request):n(e.request))}}function setHeaders(e,t){var n=t.headers||{},r;n.Accept=n.Accept||defaultHeaders.accept[t.type]||defaultHeaders.accept["*"];var i=typeof FormData!="undefined"&&t.data instanceof FormData;!t.crossOrigin&&!n[requestedWith]&&(n[requestedWith]=defaultHeaders.requestedWith),!n[contentType]&&!i&&(n[contentType]=t.contentType||defaultHeaders.contentType);for(r in n)n.hasOwnProperty(r)&&"setRequestHeader"in e&&e.setRequestHeader(r,n[r])}function setCredentials(e,t){typeof t.withCredentials!="undefined"&&typeof e.withCredentials!="undefined"&&(e.withCredentials=!!t.withCredentials)}function generalCallback(e){lastValue=e}function urlappend(e,t){return e+(/\?/.test(e)?"&":"?")+t}function handleJsonp(e,t,n,r){var i=uniqid++,s=e.jsonpCallback||"callback",o=e.jsonpCallbackName||reqwest.getcallbackPrefix(i),u=new RegExp("((^|\\?|&)"+s+")=([^&]+)"),a=r.match(u),f=doc.createElement("script"),l=0,c=navigator.userAgent.indexOf("MSIE 10.0")!==-1;return a?a[3]==="?"?r=r.replace(u,"$1="+o):o=a[3]:r=urlappend(r,s+"="+o),context[o]=generalCallback,f.type="text/javascript",f.src=r,f.async=!0,typeof f.onreadystatechange!="undefined"&&!c&&(f.htmlFor=f.id="_reqwest_"+i),f.onload=f.onreadystatechange=function(){if(f[readyState]&&f[readyState]!=="complete"&&f[readyState]!=="loaded"||l)return!1;f.onload=f.onreadystatechange=null,f.onclick&&f.onclick(),t(lastValue),lastValue=undefined,head.removeChild(f),l=1},head.appendChild(f),{abort:function(){f.onload=f.onreadystatechange=null,n({},"Request is aborted: timeout",{}),lastValue=undefined,head.removeChild(f),l=1}}}function getRequest(e,t){var n=this.o,r=(n.method||"GET").toUpperCase(),i=typeof n=="string"?n:n.url,s=n.processData!==!1&&n.data&&typeof n.data!="string"?reqwest.toQueryString(n.data):n.data||null,o,u=!1;return(n["type"]=="jsonp"||r=="GET")&&s&&(i=urlappend(i,s),s=null),n["type"]=="jsonp"?handleJsonp(n,e,t,i):(o=n.xhr&&n.xhr(n)||xhr(n),o.open(r,i,n.async===!1?!1:!0),setHeaders(o,n),setCredentials(o,n),context[xDomainRequest]&&o instanceof context[xDomainRequest]?(o.onload=e,o.onerror=t,o.onprogress=function(){},u=!0):o.onreadystatechange=handleReadyState(this,e,t),n.before&&n.before(o),u?setTimeout(function(){o.send(s)},200):o.send(s),o)}function Reqwest(e,t){this.o=e,this.fn=t,init.apply(this,arguments)}function setType(e){if(e===null)return undefined;if(e.match("json"))return"json";if(e.match("javascript"))return"js";if(e.match("text"))return"html";if(e.match("xml"))return"xml"}function init(o,fn){function complete(e){o.timeout&&clearTimeout(self.timeout),self.timeout=null;while(self._completeHandlers.length>0)self._completeHandlers.shift()(e)}function success(resp){var type=o.type||resp&&setType(resp.getResponseHeader("Content-Type"));resp=type!=="jsonp"?self.request:resp;var filteredResponse=globalSetupOptions.dataFilter(resp.responseText,type),r=filteredResponse;try{resp.responseText=r}catch(e){}if(r)switch(type){case"json":try{resp=context.JSON?context.JSON.parse(r):eval("("+r+")")}catch(err){return error(resp,"Could not parse JSON in response",err)}break;case"js":resp=eval(r);break;case"html":resp=r;break;case"xml":resp=resp.responseXML&&resp.responseXML.parseError&&resp.responseXML.parseError.errorCode&&resp.responseXML.parseError.reason?null:resp.responseXML}self._responseArgs.resp=resp,self._fulfilled=!0,fn(resp),self._successHandler(resp);while(self._fulfillmentHandlers.length>0)resp=self._fulfillmentHandlers.shift()(resp);complete(resp)}function timedOut(){self._timedOut=!0,self.request.abort()}function error(e,t,n){e=self.request,self._responseArgs.resp=e,self._responseArgs.msg=t,self._responseArgs.t=n,self._erred=!0;while(self._errorHandlers.length>0)self._errorHandlers.shift()(e,t,n);complete(e)}this.url=typeof o=="string"?o:o.url,this.timeout=null,this._fulfilled=!1,this._successHandler=function(){},this._fulfillmentHandlers=[],this._errorHandlers=[],this._completeHandlers=[],this._erred=!1,this._responseArgs={};var self=this;fn=fn||function(){},o.timeout&&(this.timeout=setTimeout(function(){timedOut()},o.timeout)),o.success&&(this._successHandler=function(){o.success.apply(o,arguments)}),o.error&&this._errorHandlers.push(function(){o.error.apply(o,arguments)}),o.complete&&this._completeHandlers.push(function(){o.complete.apply(o,arguments)}),this.request=getRequest.call(this,success,error)}function reqwest(e,t){return new Reqwest(e,t)}function normalize(e){return e?e.replace(/\r?\n/g,"\r\n"):""}function serial(e,t){var n=e.name,r=e.tagName.toLowerCase(),i=function(e){e&&!e.disabled&&t(n,normalize(e.attributes.value&&e.attributes.value.specified?e.value:e.text))},s,o,u,a;if(e.disabled||!n)return;switch(r){case"input":/reset|button|image|file/i.test(e.type)||(s=/checkbox/i.test(e.type),o=/radio/i.test(e.type),u=e.value,(!s&&!o||e.checked)&&t(n,normalize(s&&u===""?"on":u)));break;case"textarea":t(n,normalize(e.value));break;case"select":if(e.type.toLowerCase()==="select-one")i(e.selectedIndex>=0?e.options[e.selectedIndex]:null);else for(a=0;e.length&&a<e.length;a++)e.options[a].selected&&i(e.options[a])}}function eachFormElement(){var e=this,t,n,r=function(t,n){var r,i,s;for(r=0;r<n.length;r++){s=t[byTag](n[r]);for(i=0;i<s.length;i++)serial(s[i],e)}};for(n=0;n<arguments.length;n++)t=arguments[n],/input|select|textarea/i.test(t.tagName)&&serial(t,e),r(t,["input","select","textarea"])}function serializeQueryString(){return reqwest.toQueryString(reqwest.serializeArray.apply(null,arguments))}function serializeHash(){var e={};return eachFormElement.apply(function(t,n){t in e?(e[t]&&!isArray(e[t])&&(e[t]=[e[t]]),e[t].push(n)):e[t]=n},arguments),e}function buildParams(e,t,n,r){var i,s,o,u=/\[\]$/;if(isArray(t))for(s=0;t&&s<t.length;s++)o=t[s],n||u.test(e)?r(e,o):buildParams(e+"["+(typeof o=="object"?s:"")+"]",o,n,r);else if(t&&t.toString()==="[object Object]")for(i in t)buildParams(e+"["+i+"]",t[i],n,r);else r(e,t)}var context=this;if("window"in context)var doc=document,byTag="getElementsByTagName",head=doc[byTag]("head")[0];else{var XHR2;try{XHR2=require("xhr2")}catch(ex){throw new Error("Peer dependency `xhr2` required! Please npm install xhr2")}}var httpsRe=/^http/,protocolRe=/(^\w+):\/\//,twoHundo=/^(20\d|1223)$/,readyState="readyState",contentType="Content-Type",requestedWith="X-Requested-With",uniqid=0,callbackPrefix="reqwest_"+ +(new Date),lastValue,xmlHttpRequest="XMLHttpRequest",xDomainRequest="XDomainRequest",noop=function(){},isArray=typeof Array.isArray=="function"?Array.isArray:function(e){return e instanceof Array},defaultHeaders={contentType:"application/x-www-form-urlencoded",requestedWith:xmlHttpRequest,accept:{"*":"text/javascript, text/html, application/xml, text/xml, */*",xml:"application/xml, text/xml",html:"text/html",text:"text/plain",json:"application/json, text/javascript",js:"application/javascript, text/javascript"}},xhr=function(e){if(e.crossOrigin===!0){var t=context[xmlHttpRequest]?new XMLHttpRequest:null;if(t&&"withCredentials"in t)return t;if(context[xDomainRequest])return new XDomainRequest;throw new Error("Browser does not support cross-origin requests")}return context[xmlHttpRequest]?new XMLHttpRequest:XHR2?new XHR2:new ActiveXObject("Microsoft.XMLHTTP")},globalSetupOptions={dataFilter:function(e){return e}};return Reqwest.prototype={abort:function(){this._aborted=!0,this.request.abort()},retry:function(){init.call(this,this.o,this.fn)},then:function(e,t){return e=e||function(){},t=t||function(){},this._fulfilled?this._responseArgs.resp=e(this._responseArgs.resp):this._erred?t(this._responseArgs.resp,this._responseArgs.msg,this._responseArgs.t):(this._fulfillmentHandlers.push(e),this._errorHandlers.push(t)),this},always:function(e){return this._fulfilled||this._erred?e(this._responseArgs.resp):this._completeHandlers.push(e),this},fail:function(e){return this._erred?e(this._responseArgs.resp,this._responseArgs.msg,this._responseArgs.t):this._errorHandlers.push(e),this},"catch":function(e){return this.fail(e)}},reqwest.serializeArray=function(){var e=[];return eachFormElement.apply(function(t,n){e.push({name:t,value:n})},arguments),e},reqwest.serialize=function(){if(arguments.length===0)return"";var e,t,n=Array.prototype.slice.call(arguments,0);return e=n.pop(),e&&e.nodeType&&n.push(e)&&(e=null),e&&(e=e.type),e=="map"?t=serializeHash:e=="array"?t=reqwest.serializeArray:t=serializeQueryString,t.apply(null,n)},reqwest.toQueryString=function(e,t){var n,r,i=t||!1,s=[],o=encodeURIComponent,u=function(e,t){t="function"==typeof t?t():t==null?"":t,s[s.length]=o(e)+"="+o(t)};if(isArray(e))for(r=0;e&&r<e.length;r++)u(e[r].name,e[r].value);else for(n in e)e.hasOwnProperty(n)&&buildParams(n,e[n],i,u);return s.join("&").replace(/%20/g,"+")},reqwest.getcallbackPrefix=function(){return callbackPrefix},reqwest.compat=function(e,t){return e&&(e.type&&(e.method=e.type)&&delete e.type,e.dataType&&(e.type=e.dataType),e.jsonpCallback&&(e.jsonpCallbackName=e.jsonpCallback)&&delete e.jsonpCallback,e.jsonp&&(e.jsonpCallback=e.jsonp)),new Reqwest(e,t)},reqwest.ajaxSetup=function(e){e=e||{};for(var t in e)globalSetupOptions[t]=e[t]},reqwest})
/* ******************************************************************************
End reqwest.min.js
****************************************************************************** */
"use strict";

/**
* ecap-ajax.js
* @copyright The Motley Fool
*/
var _document = _document || document;

(function (global, document) {
  global.EcapAjax = global.EcapAjax || {};
  var sourceCode = void 0;
  var millisecondsTimeout = 10000;
  var firstAjaxAttempt = true;

  var loadSentry = function loadSentry() {
    var src = '//browser.sentry-cdn.com/4.4.1/bundle.min.js';
    var s = document.createElement('script');
    s.setAttribute('src', src);
    s.setAttribute('crossorigin', 'anonymous');
    s.onload = initializeSentry;
    document.body.appendChild(s);
  }; // initiate Sentry


  var initializeSentry = function initializeSentry() {
    var SentryInitUrlForEcapAjax = 'https://766f2817ee1c4eef97ff0da96be6753f@sentry.io/1334710';
    Sentry.init({
      dsn: SentryInitUrlForEcapAjax,
      blacklistUrls: [// exclude all non-fool urls
      /^((?!fool(cdn)?.com).)*$/]
    });
  }; // helper functions


  var isLive = function isLive() {
    return window.location.host.split('.').length === 3; // length = 4 for staging, test, dev/localhost
  };

  var stringToUrl = function stringToUrl(string) {
    // to turn a url string into a qualified window.location object we're creating a link and setting the href property.
    // be sure to add "http" protocol if it's not in string.  this link isn't real and won't ever be added to the DOM,
    // so we don't need to be accurate about http/https.  we simply want an object that will behave like document.location
    var aLink = void 0;

    if (string) {
      if (string.indexOf("://") < 0) {
        string = "http://" + string;
      }

      aLink = document.createElement("a");
      aLink.href = string;
    }

    return aLink;
  };

  var addSourceAndSend = function addSourceAndSend(url, form) {
    var destination = stringToUrl(url);
    var searchParams = void 0;

    try {
      // older browsers don't know what URLSearchParams is
      searchParams = new URLSearchParams(destination.search);
      searchParams.set('source', getSource(form));
    } catch (e) {
      // get the source the old fashioned way and then add any QSParams 
      searchParams = "source=" + getSource(form);

      if (destination.search) {
        searchParams += "&" + destination.search.substr(1);
      }
    }

    if (!getQueryStringParam('redirect')) {
      var redirectUrl = destination.protocol + "//" + destination.hostname + destination.pathname + '?' + searchParams.toString();
      redirectUrl = checkSlashBeforePathInRedirectUrl(redirectUrl);
      EcapAjax.nextPage(redirectUrl);
    } else {
      global.alert("Thank you!");
    }
  }; // This should not be necessary!!! When debugging in IE11, there is no slash in redirectUrl after "fool.com" even
  // though it appears at the start of destination.pathname and the output of all the right of the equals sign is right.


  var checkSlashBeforePathInRedirectUrl = function checkSlashBeforePathInRedirectUrl(redirectUrl) {
    if (!/fool.com\//.test(redirectUrl)) {
      var indexEndHostname = redirectUrl.indexOf("fool.com") + 8;
      redirectUrl = redirectUrl.substring(0, indexEndHostname) + "/" + redirectUrl.substring(indexEndHostname);
    }

    return redirectUrl;
  };

  var nextPage = function nextPage(url) {
    global.location.href = url;
  };

  var getSearch = function getSearch() {
    return global.location.search;
  };

  var getQueryStringParam = function getQueryStringParam(param) {
    param = param.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
    var regexS = "[\\?&]" + param + "=([^&#]*)";
    var regex = new RegExp(regexS);
    var results = regex.exec(global.EcapAjax.getSearch());

    if (results === null) {
      return "";
    } else {
      return decodeURIComponent(results[1].replace(/\+/g, " "));
    }
  };

  var getCookie = function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');

    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];

      while (c.charAt(0) === ' ') {
        c = c.substring(1, c.length);
      }

      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
    }

    return null;
  };

  var getUtmThing = function getUtmThing(fallbackValue, utmParam) {
    fallbackValue = fallbackValue || '';
    var utm_param = getQueryStringParam(utmParam);
    if (utm_param) return utm_param;
    var utms_cookie = getCookie('utms');

    if (utms_cookie != null) {
      var utms = utms_cookie.split('&');
      utms.forEach(function (utm) {
        var parts = utm.split('=');

        if (parts[0] === utmParam) {
          utm_param = parts[1];
        }
      });
      return utm_param;
    }

    return fallbackValue;
  };

  var getUtmSource = function getUtmSource(fallbackValue) {
    fallbackValue = getUtmThing(fallbackValue, 'utm_source');
    return fallbackValue;
  };

  var getUtmCampaign = function getUtmCampaign(fallbackValue) {
    fallbackValue = getUtmThing(fallbackValue, 'utm_campaign');
    return fallbackValue;
  };

  var getUtmMedium = function getUtmMedium(fallbackValue) {
    fallbackValue = getUtmThing(fallbackValue, 'utm_medium');
    return fallbackValue;
  };

  var getUtmTerm = function getUtmTerm(fallbackValue) {
    fallbackValue = getUtmThing(fallbackValue, 'utm_term');
    return fallbackValue;
  };

  var getUtmContent = function getUtmContent(fallbackValue) {
    fallbackValue = getUtmThing(fallbackValue, 'utm_content');
    return fallbackValue;
  };

  var isStaging = function isStaging() {
    return document.location.host.split(".")[0] === "staging";
  }; // locate any ecap form(s)


  var getEcapForms = function getEcapForms() {
    var ecapForms = [];
    var forms = document.getElementsByTagName('form');

    for (var i = 0; i < forms.length; i++) {
      if (forms[i].action.indexOf('RxEcapWebResponse.aspx') > -1) {
        ecapForms.push(forms[i]);
      }
    }

    return ecapForms;
  }; // Restructure the form so that the email input element is inside its associated label so we can avoid
  // needing to reference an input with an ID from the 'for' attribute of the associated label.
  // If there is no <label>, create one.
  // Put the label text inside a <span> so it can be updated without blowing away the <input>. However, we have pages
  // where the label was intended only to show error and so was set to display:none; set to be screen-reader only if
  // placeholder text exists.


  var setEmailInputInsideLabel = function setEmailInputInsideLabel(form) {
    var emailInput = form.querySelector("input[name='email']");
    var placeholderText = emailInput.getAttribute("placeholder");
    var emailLabel = form.querySelector("label");

    if (!emailLabel) {
      emailLabel = document.createElement("label");
      emailLabel.innerText = "Enter Email Address:";
      emailInput.parentNode.insertBefore(emailLabel, emailInput);
    }

    var emailLabelSpan = document.createElement("span");
    var emailLabelText = emailLabel.innerHTML;
    emailLabel.innerHTML = "";
    emailLabelSpan.innerHTML = emailLabelText;
    emailLabelSpan.classList.add("email-text");

    if (placeholderText) {
      emailLabel.style.display = "inline-block";
      emailLabelSpan.classList.add("sr-only"); // screen reader only

      verifySROnlyStyle(emailLabelSpan);
    }

    emailLabel.appendChild(emailLabelSpan);
    emailLabel.appendChild(emailInput);

    if (isSubmitBtnCentered(form)) {
      emailInput.style.display = "block";
      emailInput.style.margin = "5px auto 0";
    }
  };

  var verifySROnlyStyle = function verifySROnlyStyle(element) {
    // If the 'sr-only' CSS class (screen reader only) does not appear to be affecting the element, create the style.
    if (window.getComputedStyle(element).position !== "absolute") {
      var head = document.querySelector("head");
      var style = document.createElement("style");
      style.innerHTML = ".sr-only {position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); border: 0;}";
      head.appendChild(style);
    }
  }; // This is sub-optimal but trying to work with the pages we already have, both ecaps and ECVs.


  var isSubmitBtnCentered = function isSubmitBtnCentered(form) {
    var submitBtn = form.querySelector("input[type='submit']");

    if (submitBtn) {
      if (window.getComputedStyle(submitBtn).marginLeft === "auto" && window.getComputedStyle(submitBtn).marginRight === "auto") {
        return true;
      } else if (window.getComputedStyle(submitBtn).display.indexOf("inline") > -1 && window.getComputedStyle(submitBtn.parentNode).textAlign === "center") {
        return true;
      }

      return false;
    }
  };

  var setEventListenerOnSubmitBtn = function setEventListenerOnSubmitBtn(form) {
    var submitBtn = form.querySelector("input[type='submit']");
    submitBtn.addEventListener("click", ajaxSubmitFormFromEvent);
  };

  var removeEventListenerOnSubmitBtn = function removeEventListenerOnSubmitBtn(form) {
    var submitBtn = form.querySelector("input[type='submit']");
    submitBtn.removeEventListener("click", ajaxSubmitFormFromEvent);
  }; // LeadSpend and possibly other things are using form.submit() which does NOT raise a submit event and so
  // cannot be stopped using event.preventDefault(). Resetting the form's action attribute means that the form
  // submission does nothing. Ugly but effective. If Javascript is unavailable, form submission will still happen.


  var originalFormAction = "";

  var voidFormAction = function voidFormAction(form) {
    originalFormAction = form.getAttribute("action");
    form.setAttribute("action", "javascript:void(0)");
  };

  var resetFormActionToOriginal = function resetFormActionToOriginal(form) {
    form.setAttribute("action", originalFormAction);
  }; // disable the submit buttons


  var processForms = function processForms() {
    var forms = getEcapForms();

    for (var i = 0; i < forms.length; i++) {
      var form = forms[i];
      setEmailInputInsideLabel(form);
      setEventListenerOnSubmitBtn(form);
      voidFormAction(form);
    }
  };

  var getInputValueFromForm = function getInputValueFromForm(form, inputNames) {
    // @param {HTMLElement} form
    // @param {Array} inputNames    // an array of input names ex: ["source", "sauce"]
    // @return {String}             // value from input that matches one of the inputNames
    if (!form) {
      return;
    }

    if (!Array.isArray(inputNames)) {
      inputNames = [inputNames];
    }

    var inputs = form.getElementsByTagName('input');

    for (var i = 0; i < inputs.length; i++) {
      var name = inputs[i].name.toLowerCase();

      if (isInArray(name, inputNames)) {
        return inputs[i].value;
      }
    }
  }; // Babel won't convert the Array .includes method to work on IE11 so do it the old way. See
  // - https://github.com/facebook/create-react-app/issues/942
  // - https://github.com/babel/babel-preset-env/issues/318


  var isInArray = function isInArray(value, array) {
    return array.indexOf(value) > -1;
  };

  var getEmailAddress = function getEmailAddress(form) {
    // comes from the form input
    return getInputValueFromForm(form, ["email"]).trim();
  };

  var getCampaignId = function getCampaignId(form) {
    // aka 'aid' should be in a hidden input
    return getInputValueFromForm(form, ["aid"]);
  };

  var getBrand = function getBrand(form) {
    // should default to 'usmf', but we should also have a mechanism to override
    return getInputValueFromForm(form, ["brand"]) || 'usmf';
  };

  var getSource = function getSource(form) {
    // 1st check the form input, fallback to the querystring, finally 'NoSource'
    if (!sourceCode) {
      sourceCode = getInputValueFromForm(form, ["source", "src"]) || getQueryStringParam('source') || 'NoSource';
    }

    return sourceCode;
  };

  var getOrCreateGaCookieValue = function getOrCreateGaCookieValue() {
    var cookieValue = getCookie("_ga");

    if (!cookieValue) {
      var getDomain = function getDomain() {
        // domain-fetcher courtesy of ross scrivener,  rossscrivener.co.uk
        var domain = function () {
          var i = 0;
          var domain = document.domain;
          var hostname = domain.split('.');
          var tempCookieName = '_gd' + new Date().getTime();

          while (i < hostname.length - 1 && document.cookie.indexOf(tempCookieName + '=' + tempCookieName) == -1) {
            // while you loop through all the dots from the hostname
            // AND while a cookie with this temp name does not exist
            domain = hostname.slice(-1 - ++i).join('.');
            document.cookie = tempCookieName + "=" + tempCookieName + ";domain=" + domain + ";";
          }

          document.cookie = tempCookieName + "=;expires=Thu, 01 Jan 1970 00:00:01 GMT;domain=" + domain + ";";
          return domain;
        }();

        if (domain.indexOf("localhost") > -1) return "";
        return "." + domain;
      };

      var expires = new Date();
      var expiration = expires.getTime() + 2000 * 60 * 60 * 8766;
      expires.setTime(expiration);
      var digits = Math.random().toString().slice(2, 11) + "." + Math.random().toString().slice(2, 11);
      cookieValue = "GA1.2." + digits;
      document.cookie = "_ga=" + cookieValue + ";path=/;domain=" + getDomain() + ";expires=" + expires.toGMTString() + ";";
      logError("Created _ga cookie.", {
        visitCookie: getCookie("Visit")
      });
    }

    return getCookie("_ga");
  };

  var getGoogleAnalyticsId = function getGoogleAnalyticsId() {
    var gaClientId = "";

    if (typeof analytics !== "undefined") {
      analytics.ready(function () {
        ga(function (tracker) {
          gaClientId = tracker.get('clientId');
        });
      });
    }

    if (!gaClientId) {
      // Cookie value is of form "GA1.2.809992809.1544460478" but possibly also "GA1.2.amp-RzSFqnDVQnkrZ3l5cZcx8A"
      var cookieValue = getOrCreateGaCookieValue();

      if (cookieValue) {
        var re = /^GA\d+\.\d+\./;
        gaClientId = cookieValue.replace(re, '');
      } else {
        // this should never happen
        logError("Ecap recorded without GoogleAnalyticsId.", {
          url: global.location.href
        });
      }
    }

    return gaClientId;
  };

  var logError = function logError(message, extra) {
    if (isLive()) {
      Sentry.captureMessage(message + " (Logged by logError.)", {
        extra: extra,
        level: 'error'
      });
    } else {
      console.warn("This would go to Sentry on live (as 'ecap-ajax'): " + message + ". extra: " + JSON.stringify(extra));
    }
  };

  var displayError = function displayError(message, element) {
    element.innerHTML = message;
    element.classList.add("error");
    element.style.display = "block";
    element.classList.remove("sr-only");
  }; // Not actually returning a <label> but the <span> inside it


  var getLabel = function getLabel(form) {
    return form.querySelector(".email-text");
  };

  var disableSubmitButton = function disableSubmitButton(form) {
    form.querySelector("input[type='submit']").disabled = true;
  };

  var enableSubmitButton = function enableSubmitButton(form) {
    form.querySelector("input[type='submit']").disabled = false;
  };

  var ajaxSubmitFormFromEvent = function ajaxSubmitFormFromEvent(evt) {
    currentForm = evt.currentTarget.form; // See https://stackoverflow.com/questions/256754/how-to-pass-arguments-to-addeventlistener-listener-function

    ajaxSubmitForm(currentForm);
  };

  var ajaxSubmitForm = function ajaxSubmitForm(currentForm) {
    disableSubmitButton(currentForm);
    validateEmailAddressClientSide(currentForm); // callback function will call sendDataToAddToCampaign if OK.
  }; // Have to set up wrappers for reqwest for unit testing so we can identify them separately.


  var reqwestEmailValidation = function reqwestEmailValidation(settings) {
    return reqwest(settings);
  };

  var reqwestAddToCampaign = function reqwestAddToCampaign(settings) {
    return reqwest(settings);
  };

  var validateEmailAddressClientSide = function validateEmailAddressClientSide(currentForm) {
    var currentLabel = getLabel(currentForm);
    var emailAddress = getEmailAddress(currentForm);

    if (emailAddress === "") {
      displayError("Please enter a valid email address", currentLabel);
      enableSubmitButton(currentForm);
      return;
    }

    var subdomain = isStaging() ? "staging." : "";
    EcapAjax.reqwestEmailValidation({
      url: 'https://' + subdomain + 'www.fool.com/a/marketing/campaign/email/validation/v1/',
      method: 'GET',
      data: {
        'email': emailAddress
      },
      headers: {
        'X-apikey': 'public'
      },
      success: function success(respObj) {
        if (respObj.status === "rejected") {
          displayError("Please check your email address as it appears to be invalid. Consider using a different email address if it continues to be rejected.", currentLabel);
          enableSubmitButton(currentForm);
        } else {
          // Apparently not rejected email
          sendDataToAddToCampaign(currentForm, currentLabel);
        }
      },
      error: function error(respObj) {
        var errorMessage = 'Error validating email address.';

        if (respObj.status === 422) {
          var messageBody = JSON.parse(respObj.response);
          var detail = messageBody.detail || [{}];
          errorMessage = detail[0].msg || errorMessage;
        } else {
          errorMessage = "Server error. You might try again but it looks like the problem is on our side.";
        }

        displayError(errorMessage, currentLabel);
        enableSubmitButton(currentForm);
        return false;
      }
    });
  };

  var sendDataToAddToCampaign = function sendDataToAddToCampaign(currentForm, currentLabel) {
    var dataToAddToCampaign = {
      emailAddress: getEmailAddress(currentForm),
      campaignId: getCampaignId(currentForm),
      source: getSource(currentForm),
      brand: getBrand(currentForm),
      GoogleAnalyticsId: getGoogleAnalyticsId()
    };
    var subdomain = isStaging() ? "staging." : "";
    EcapAjax.reqwestAddToCampaign({
      url: 'https://' + subdomain + 'www.fool.com/common/ecap/addtocampaign.ashx',
      type: 'json',
      crossOrigin: true,
      withCredentials: true,
      method: 'post',
      data: dataToAddToCampaign,
      timeout: millisecondsTimeout,
      // Undocumented feature: https://github.com/ded/reqwest/issues/242
      success: function success(respObj) {
        /* respObj has four properties:
        	- Uid
        	- Aid
        	- CampaignUrl
        	- TrackingUrl (which doesn't work)  */
        currentLabel.innerHTML = "Thank you. You will be redirected momentarily&hellip;";
        currentLabel.classList.remove("error");
        currentLabel.classList.add("text-success");
        firePixel(dataToAddToCampaign.emailAddress); // Send user on their way after a short delay.

        setTimeout(function () {
          addSourceAndSend(respObj.CampaignUrl, currentForm);
        }, 1000);
      },
      error: function error(respObj) {
        enableSubmitButton(currentForm); // error conditions:

        if (respObj.status === 460) {
          // invalid email address - should not get in here after server-side validation is turned off
          displayError("Please enter a valid email address!", currentLabel);
          var emailInput = currentForm.querySelector("input[name='email']");
          emailInput.classList.add("ecapWidget_error");
        } else if (respObj.status === 461) {
          // invalid campaignId
          logError("Invalid campaignId set on ecap page.", {
            campaignId: dataToAddToCampaign.campaignId,
            url: global.location.href
          });
          displayError("Sorry, something has gone wrong that appears to be our fault. It may be possible to try again though we fear you may get the same result. The error has been noted and will hopefully be fixed soon.", currentLabel);
        } else if (respObj.status === 500) {
          //
          logError("Server error on ecap page ", {
            url: global.location.href
          });
          displayError("Server error. Sorry, something has gone wrong that appears to be our fault. It may be possible to try again though we fear you may get the same result. The error has been noted and will hopefully be fixed soon.", currentLabel);
        } else if (respObj.status === 0) {
          EcapAjax.attemptAnotherSave(currentForm, respObj);
        } else {
          logError("Error response from ajax request on ecap page.", {
            response: respObj,
            url: global.location.href
          });
          displayError("Server Error. Please try again.", currentLabel);
        }
      }
    });
  };

  var attemptAnotherSave = function attemptAnotherSave(currentForm, respObj) {
    if (firstAjaxAttempt) {
      firstAjaxAttempt = false; // Try again

      var timeoutMessage = "Making second attempt to submit form as first timed out.";
      console.warn(timeoutMessage);
      logError(timeoutMessage, {
        response: respObj,
        url: global.location.href
      });
      ajaxSubmitForm(currentForm);
    } else {
      EcapAjax.makeStdFormSubmission(currentForm);
    }
  };

  var makeStdFormSubmission = function makeStdFormSubmission(form) {
    console.warn("Attempting standard form submission.");
    removeEventListenerOnSubmitBtn(form);
    resetFormActionToOriginal(form); // Don't use form.submit(); as unit test needs to block submission but submit() does not raise a submit event.

    var submitBtn = form.querySelector("input[type='submit']");
    submitBtn.click();
  };

  var firePixel = function firePixel(emailAddress) {
    global.dataLayer = global.dataLayer || [];
    var sha256email = '';

    try {
      sha256email = sha256(emailAddress);
    } catch (e) {
      logError("Unable to sha256 hash and send to datalayer", {
        error: e
      });
    }

    try {
      global.dataLayer.push({
        'EcapResults.HashedEmail': sha256email
      });
      global.dataLayer.push({
        'EcapResults.Email': emailAddress
      });
      global.dataLayer.push({
        'EcapResults.Source': getUtmSource('TMF')
      });
      global.dataLayer.push({
        'EcapResults.Campaign': getUtmCampaign('TMF')
      });
      global.dataLayer.push({
        'EcapResults.Medium': getUtmMedium('TMF')
      });
      global.dataLayer.push({
        'EcapResults.Term': getUtmTerm('TMF')
      });
      global.dataLayer.push({
        'EcapResults.Content': getUtmContent('TMF')
      });
      global.dataLayer.push({
        'event': 'EcapResults'
      });
    } catch (e) {
      logError("Ecap dataLayer error.", {
        error: e
      });
    }
  };

  var resetTimeout = function resetTimeout(timeoutInMilliseconds) {
    millisecondsTimeout = timeoutInMilliseconds;
  };

  var checkForTimeoutOverride = function checkForTimeoutOverride() {
    var timeoutOverride = getQueryStringParam('timeout');

    if (timeoutOverride) {
      resetTimeout(Number(timeoutOverride));
    }
  };

  EcapAjax.loadSentry = loadSentry;
  EcapAjax.getSearch = getSearch;
  EcapAjax.nextPage = nextPage;
  EcapAjax.resetTimeout = resetTimeout;
  EcapAjax.attemptAnotherSave = attemptAnotherSave;
  EcapAjax.makeStdFormSubmission = makeStdFormSubmission;
  EcapAjax.reqwestEmailValidation = reqwestEmailValidation;
  EcapAjax.reqwestAddToCampaign = reqwestAddToCampaign;

  EcapAjax.initialize = function () {
    EcapAjax.loadSentry();
    processForms();
    checkForTimeoutOverride();
  };
})(window, document);

_document.addEventListener("DOMContentLoaded", function () {
  EcapAjax.initialize();
});